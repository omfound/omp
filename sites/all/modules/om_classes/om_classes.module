<?php

function om_classes_entity_insert($entity, $type) {
  if($entity->type == 'class') {
    $node = new stdClass();
    $node->uid = $entity->uid;
    $node->title = $entity->title;
    $node->status = $entity->status;
    $node->language = LANGUAGE_NONE;
    $node->created = $entity->created;
    $node->changed = $entity->changed;
    $node->field_class_display_class[LANGUAGE_NONE][] = $entity->product_id;
    node_save($node);
  }
}

function om_classes_entity_update($entity, $type) {
  if($entity->type == 'class') {
    if($nid = om_classes_entity_display_lookup($entity->product_id)) {
      $node = node_load($nid);
      $node->uid = $entity->uid;
      $node->title = $entity->title;
      $node->status = $entity->status;
      $node->language = LANGUAGE_NONE;
      $node->created = $entity->created;
      $node->changed = $entity->changed;
      node_save($node);
    }
  }
}

function om_classes_entity_delete($entity, $type) {
  if($entity->type == 'class') {
    if($nid = om_classes_entity_display_lookup($entity->product_id)) {
      node_delete($nid);
    }
  }
}

function om_classes_entity_display_lookup($product_id) {
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'node', '=')
    ->entityCondition('bundle', 'class_display', '=')
    ->fieldCondition('field_class_display_class', 'product_id', $product_id, '=')
    ->execute();

  foreach($result as $type) {
    foreach($type as $key => $info) {
      if($info->nid) {
        return $info->nid;
      }
    } 
  }

  return false;
}
