<?php
require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'om_playback_servers_cablecast') . '/includes/om_playback_servers_cablecast.field.inc';

require_once DRUPAL_ROOT . '/' . drupal_get_path('module', 'om_playback_servers_cablecast') . '/includes/om_playback_servers_cablecast_file.inc';

function om_playback_servers_cablecast_menu() {
  $items = array();
  $items['om_playback_servers/cablecast'] = array(
    'title' => t('Cablecast Settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('om_playback_servers_cablecast_admin_form'),
    'access arguments' => array('administer om playback servers'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 100
  );
  return $items;
}

function om_playback_servers_cablecast_admin_form($form, $form_state) {
  $query = db_select('om_playback_servers', 'pbs');
  $query->fields('pbs', array('pbsid', 'name'));
  $query->condition('ompbs_type', 'cablecast', '=');
  $resource = $query->execute();
  $pbs = array();
  while ($result = $resource->fetchAssoc()) {
    $pbs[$result['pbsid']] = $result['name'];
  }
  if (empty($pbs)) {
    $link = l('Add one now.', 'om_playback_servers/add');
    $form['default_cablecast'] = array(
      '#title' => t('Default Cablecast'),
      '#markup' => t('You have not created any Cablecast playback servers yet. !addone', array('!addone' => $link)),
    );
  }
  else {
    $form['default_cablecast'] = array(
      '#title' => t('Default Cablecast'),
      '#description' => 'Select which Cablecast contains your files database.',
      '#type' => 'select',
      '#options' => $pbs
    );
  }
  return system_settings_form($form);
}

/**
 * Implements hook_om_playback_servers_om_playback_server
 */
function om_playback_servers_cablecast_om_playback_servers_om_playback_server() {
  return array(
    'cablecast' => array(
      'title' => t('Cablecast'),
      'description' => t('Provides API support for Tightrope Cablecasts.'),
      'type' => 'om_playback_server',
      'path' => drupal_get_path('module', 'om_playback_servers_cablecast') . '/includes/om_playback_server',
      'file' => 'cablecast_playback_server.inc',
      'playback_server' => array(
        'class' => 'cablecastPlaybackServerController',
        'parent' => 'playbackServerController',
      ),
    )
  );
}

/**
 * Implements hook_permission
 */
function om_playback_servers_cablecast_permission() {
  return array(
    'use cablecast media browser' => array(
      'title' => t('Use Cablecast Media Selector'),
      'description' => t('Select orphaned files from your Cablecast, create show metadata and store them on a node.'),
    ),
  );
}

