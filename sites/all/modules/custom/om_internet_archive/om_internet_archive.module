<?php

function internet_archive_thumb_from_file_url($url) {
  if ($item = internet_archive_item_from_file_url($url)) {
    $pathinfo = pathinfo($url);
    if (!empty($pathinfo['filename'])) {
      $filename = $pathinfo['filename'] . '_000001.jpg';
      $filename = str_replace('_512kb', '', $filename);

      $link = 'http://www.archive.org/download/';
      $link .= $item .'/'. $item .'.thumbs/';
      $link .= $filename;

      return $link;
    }
  }

  return false;
}

function internet_archive_item_from_file_url($url) {
  if (strpos($url, 'archive.org') !== false && strpos($url, 'download') !== false) {
    $urlinfo = parse_url($url);
    if (!empty($urlinfo['path'])) {
      $parts = explode('/', $urlinfo['path']);
      if (!empty($parts[2])) {
        return $parts[2];
      }
    }
  }

  return false;
}


/**
 * Super small class to get all derivatives from a an item.
 *   @TODO should be replace by a less taxing method of retrieval.
 * @public set_item
 * @public get_item
 * @public get_derivative(extension)
 *   Get a single derivative by extension. Caches result so multiple uses per request are ok
 * @public get_derivatives
 *   Get all derivatives.
 */
class internetArchiveDerivativeHandler {
  public $item;
  public function set_item($item) {
    $this->item = $item;
  }
  public function get_item() {
    return $this->item;
  }
  public function get_derivatives() {
    $derivatives = $this->make_curl_request();
    $this->derivatives = drupal_json_decode($derivatives);
    return $this->derivatives;
  }
  public function get_derivative($extension) {
    if (strpos($extension, '.') === FALSE) {
      $extension = '.' . $extension;
    }
    if (empty($this->derivatives)) {
      $this->get_derivatives();
    }
    if (isset($this->derivatives['files'])) {
      foreach ($this->derivatives['files'] AS $key => $derivative) {
        if (is_numeric(strpos($key, $extension))) {
          return "http://archive.org/download/" . $this->item . '/' . $key;
        }
      }
    }
    return FALSE;
  }
  private function make_curl_request() {
    if (!empty($this->item)) {
      $complete_path = $this->item . '?output=json';
      $this->ch = curl_init();
      curl_setopt($this->ch, CURLOPT_RETURNTRANSFER, TRUE);
      curl_setopt($this->ch, CURLOPT_URL, $complete_path);
      $output = curl_exec($this->ch);
      $response = curl_getinfo($this->ch, CURLINFO_HTTP_CODE);
      curl_close($this->ch);
      if ($response > 300) {
        $message = "internetArchiveDerivativeHandler::make_curl_request received a bad response: $response from archive.org";
        throw new Exception($message);
      }
      else {
        return $output;
      }
    }
    return FALSE;
  }
}