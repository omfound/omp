<?php
/**
 * @file
 * A block module that displays recent blog and forum posts.
 */
 
 /**
  * Implement hook_help.
  *
  * Displays help and module information.
  *
  * @param path
  *    Which path of the site we're using to display help
  * @param arg
  *    Array that holds the current path as returned from arg() function
  */
  
  function om_inventoryreports_help($path, $arg) {
      switch($path) {
      	case "admin/help#om_inventoryreports":
      		return '<p>'. t("This modules provides inventory reports for the Open Media System").'</p>';
      		break;
      }
   }

/**
 * Implements hook_menu().
 */
function om_inventoryreports_menu() {
    $items['admin/om/reports/inventory'] = array(
        'title' => 'Inventory Report',
        'page callback' => 'om_inventoryreports',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK);
    return $items;
}

/**
 * Function om_inventoryreports().
 */
function om_inventoryreports() {

    //Build Header
    $header = array('<b>ITEM</b>', '<b>ON HAND</b>', '<b>CHECKED OUT</b>','<b>UNAVAILABLE</b>', '<b>TOTAL</b>');
    $no_yes = array('No', 'Yes');

    /* Build complete list of items that are checked out
    Get all the items from the commerce_line_item table with field_checkout_status = Checked Out -> use the resulting
    values to calculate number of items per reservable_product_display that are checked out
    */
    $checked_out = array();
    $checked_out_query = "Select commerce_line_item.line_item_id, commerce_line_item.line_item_label from commerce_line_item where commerce_line_item.type = 'reservable_product'  order by commerce_line_item.line_item_label";
    $checked_out_results = db_query($checked_out_query);

    foreach($checked_out_results as $checked_out_record) {
        $checked_out_wrapper = entity_metadata_wrapper('commerce_line_item', $checked_out_record->line_item_id);
        if ($checked_out_wrapper->field_checkout_status->value() == 'Checked Out') {
            $checked_out[$checked_out_wrapper->line_item_label->value()] = $checked_out_wrapper->field_checkout_status->value();
        }
    }

    //Get Reservable Product Display Nodes

    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
        ->entityCondition('bundle', 'reservable_product_display')
        ->propertyOrderBy('title', 'ASC')
        //->propertyCondition('status', 1)
        ->execute();

    // Get RP node IDs

    $product_nids = array_keys($entities['node']);

    //Build Rows - Loop through rpd nodes and populate Item, On Hand, Checked Out, Unavailable and Total Columns

    foreach ($product_nids as $values) {
        //Generate Data for Each Row

        //initialize onhand, checked out, unavailable counts

        $onhand_count = 0;
        $unavailable_count = 0;
        $checkout_count = 0;

        // Get Wrapper for each Reservable Product to access title, product ids, and to loop through individual
        //   products to get total product counts associated with product display node
        //

        $reservable_product_wrapper = entity_metadata_wrapper('node', $values);

        // Process each Reservable Product Node calculate the total on hand, total unavailable, the total checked out
        //   and the overall total
        //

        foreach ($reservable_product_wrapper->field_crp_product_reference->raw() as $key2 =>$prod_id) {

            //Get Commerce Product Info to access title
            $prod_wrapper = entity_metadata_wrapper('commerce_product', $prod_id);

            //Get Commerce Line Item Info
            $chkoutstat_wrapper = entity_metadata_wrapper('commerce_line_item', $prod_id);

            //calculate number of items on hand for reservable product display
            if ($prod_wrapper->status->value() == 1) {
                $onhand_count = ++$onhand_count;
            }

            //calculate number of items unavailable for reservable product display
            $unavailable_count = count($reservable_product_wrapper->field_crp_product_reference->raw()) - $onhand_count;

            //calculate number of items unavailable for reservable product display
            //determine number checked out count
            $item = $prod_wrapper->sku->value();
            foreach ($checked_out as $key => $status) {
                if ($key == $item) {
                    $checkout_count = ++$checkout_count;
                }
            }

        }

        $rows[] = array(
            array('data' => t($reservable_product_wrapper->title->value())),
            array('data' => t($onhand_count - $checkout_count)),
            array('data' => t($checkout_count)),
            array('data' => t($unavailable_count)),
            array('data' => t(count($reservable_product_wrapper->field_crp_product_reference->raw())))
        );

    }


/*
 *
 return theme('table', $header, $rows);
 */

   return theme('table', array('header' => $header, 'rows' => $rows));

}